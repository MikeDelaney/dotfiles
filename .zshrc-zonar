# Path to your oh-my-zsh installation.
export ZSH=/Users/michael.delaney/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="blinks"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)
plugins=(virtualenvwrapper)

# User configuration

export VIRTUALENVWRAPPER_PYTHON="/usr/local/bin/python"
# export PATH="/usr/bin:/bin:/usr/sbin:/sbin:$PATH"
# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias mkproject3="mkproject --python=/usr/local/bin/python3"
alias hsitory="history"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/michael.delaney/google-cloud-sdk/path.zsh.inc' ]; then source '/Users/michael.delaney/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/michael.delaney/google-cloud-sdk/completion.zsh.inc' ]; then source '/Users/michael.delaney/google-cloud-sdk/completion.zsh.inc'; fi

# Initialize pyenv when terminal loads
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

prod_deploy() {
    export ANSIBLE_REMOTE_USER="mdelaney"
    export ANSIBLE_INVENTORY="~/projects/ansible-oem/environments/prod"
    export ANSIBLE_VAULT_PASSWORD_FILE="~/.ssh/ansible-oem_prod_vault_password"
}

dev_deploy() {
    export ANSIBLE_REMOTE_USER="mdelaney"
    export ANSIBLE_INVENTORY="~/projects/ansible-oem/environments/nonprod"
    export ANSIBLE_VAULT_PASSWORD_FILE="~/.ssh/ansible-oem_nonprod_vault_password"
}

clear_deploy() {
    unset ANSIBLE_REMOTE_USER
    unset ANSIBLE_INVENTORY
    unset ANSIBLE_VAULT_PASSWORD_FILE
}

db_jump() {
    ssh -f -o ExitOnForwardFailure=yes $1 -L ${3:-5438}:$2:5432 sleep 10
}

get_prod_api_token() {
    curl --request POST \
          --url https://zonar-login.auth0.com/oauth/token \
          --header 'content-type: application/json' \
          --data '{"client_id":"A1iYqxj5ny01VctgEwM3URFvb6DeYTCC","client_secret":"K-rq_FCeQ9ZaQX6TCSJro3VEdmVcxcY5i-m-83VyOl4hnJTgExQ_CbLMMqCr23UB","audience":"https://api.zonarsystems.net","grant_type":"client_credentials"}'
}

get_dev_api_token() {
    curl --request POST \
          --url https://zonar-dev.auth0.com/oauth/token \
          --header 'content-type: application/json' \
          --data '{"client_id":"ws2AQK6wAhZtzeR2KkXoIc7ZiVoesNjX","client_secret":"aPH1qJs2Xs6rYOdGJwcrlxn341ou4pnshbPhm04sVf5xw3kZSn0IQ4g00RH-a875","audience":"http://apidev.zonarsystems.net/","grant_type":"client_credentials"}'
}


get_qa_api_token() {
    curl --request POST \
          --url https://zonar-qa.auth0.com/oauth/token \
          --header 'content-type: application/json' \
          --data '{"client_id":"9VBES4JNgo9TwwrXJM17AkU0MOlqjjzs","client_secret":"JEI-wWIamH9liZTAaC0W9lY2CNVaboK821b5Ad5Fq7MM1hV8S6u1A30er9BrkY03","audience":"http://apiqa.zonarsystems.net/","grant_type":"client_credentials"}'
}
